name: Release
permissions:
  packages: write
  contents: write
on:
  # Triggered on new GitHub Release
  release:
    types: [published]
  # Manual trigger for rollback to specific release or redeploy latest
  workflow_dispatch:
    inputs:
      version:
        default: latest
        description: Tag you want to release.
        required: true

jobs:
  deploy_via_ssh:
    runs-on: ubuntu-22.04
    steps:
      # Checkout latest or specific tag
      - name: checkout
        if: ${‎{ github.event.inputs.version == '' || github.event.inputs.version == 'latest' }‎}
        uses: actions/checkout@v3
      - name: checkout tag
        if: ${‎{ github.event.inputs.version != '' && github.event.inputs.version != 'latest' }‎}
        uses: actions/checkout@v3
        with:
          ref: refs/tags/${‎{ github.event.inputs.version }‎}

      # Deploy Docker image with your application using `docker compose up app` remotely
      - name: remote docker-compose up via ssh
        uses: appleboy/ssh-action@v0.1.5
        env:
          APPTOKEN: ${‎{ secrets.GITHUB_TOKEN }‎}
          USERNAME: ${‎{ secrets.DEPLOY_USERNAME }‎}
        with:
          host: ${‎{ secrets.DEPLOY_HOST }‎}
          username: ${‎{ secrets.DEPLOY_USERNAME }‎}
          key: ${‎{ secrets.DEPLOY_KEY }‎}
          port: 22
          envs: APPTOKEN,USERNAME
          script: |
            cd data/docker
            rm -rf ctrl-knit
            mkdir ctrl-knit

      - name: copy files to target server via scp
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${‎{ secrets.DEPLOY_HOST }‎}
          username: ${‎{ secrets.DEPLOY_USERNAME }‎}
          port: 22
          key: ${‎{ secrets.DEPLOY_KEY }‎}
          source: "./app, ./Dockerfile, .dockerignore, ./.reaact-router, ./public, ./.prettierrc, ./package.json, ./package-lock.json, ./react-router.config.ts, ./tsconfig.json, ./vite.config.ts"
          target: "/root/data/docker/ctrl-knit"

      # Deploy Docker image with your application using `docker compose up app` remotely
      - name: remote docker-compose up via ssh
        uses: appleboy/ssh-action@v0.1.5
        env:
          APPTOKEN: ${‎{ secrets.GITHUB_TOKEN }‎}
          USERNAME: ${‎{ secrets.DEPLOY_USERNAME }‎}
        with:
          host: ${‎{ secrets.DEPLOY_HOST }‎}
          username: ${‎{ secrets.DEPLOY_USERNAME }‎}
          key: ${‎{ secrets.DEPLOY_KEY }‎}
          port: 22
          envs: APPTOKEN,USERNAME
          script: |
            echo $APPTOKEN | docker login ghcr.io -u $USERNAME --password-stdin
            cd ..
            cd ..
            docker-compose down
            docker-compose build
            docker-compose up -d
